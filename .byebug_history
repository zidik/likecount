continue
@all_graph[0].class
@all_graph[0]
@all_graph
@today_graph
continue
results_today["Oota mind veel"].as_json
results_today["Oota mind veel"]
results_today
results_today[1]
results_today[0]
results_today
@today_graph
quit
continue
dsfasd
continue
continnue
data.to_hash
data[0].to_hash
data.map(&:to_hash)
data[0].to_h
data[0].select{ |key,_| [:created_at, :likes].include? key}
data.select{ |key,_| [:created_at, :likes].include? key}
data.every_nth(1)[0]
data.every_nth(10)[0]
data[0]
data
(byebug) data[0].select{
data[0].select{">
data[0]
data.keys
data
continue
@graphs
continue
@graphs
quit
uit
tere
a.each{|k,v| tere.append({name: k, data: v.map(&:likes)})}
tere
tere = []
a.each{|k,v| tere.append({name: k, data: v.map(&:likes)})}
b
a.each{|k,v| b.append({name: k, data: v.map(&:likes)})}
a.each{|k,v| b.append({name: k, data: v.map(&:likes)}}
a.each{|k,v| b.append({name: k, data: v.map(:&likes)}}
a.each(|k,v| b.append({name: k, data: v.map(:&likes)})
b
b = []
b
p
b.pop
b.append(1)
b = []
a = Result.all.group_by(&:name) 
Result.all
Result.all.group("name")
Result.all
quit
@graphs
quit
@graphs
quit
@graphs["Oota mind veel]
@graphs
@graph
@graph~~
@graphsb
@graphs
@@
quit
a.each { |k,v| a[k] = v.map{|result| result[:likes]}}
a
a = Result.all.group_by(&:name)
Result.all.group_by(&:name).map{|d| d.map(&:likes)}
Result.all.group_by(&:name)
Result.all.group_by{|d| d[:name]}
Result.all.group_by('name')
Result.all.group('name')
Result.all
Result
